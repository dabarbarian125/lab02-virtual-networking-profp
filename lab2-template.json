{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "dnszones_profp518325_example_name": {
            "defaultValue": "profp518325.example",
            "type": "String"
        },
        "networkSecurityGroups_nsg_web_name": {
            "defaultValue": "nsg-web",
            "type": "String"
        },
        "storageAccounts_stprofp25lab2_name": {
            "defaultValue": "stprofp25lab2",
            "type": "String"
        },
        "virtualNetworks_vnet_core_profp_name": {
            "defaultValue": "vnet-core-profp",
            "type": "String"
        },
        "applicationSecurityGroups_asg_web_name": {
            "defaultValue": "asg-web",
            "type": "String"
        },
        "privateDnsZones_corp_profp518325_internal_name": {
            "defaultValue": "corp.profp518325.internal",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/applicationSecurityGroups",
            "apiVersion": "2024-07-01",
            "name": "[parameters('applicationSecurityGroups_asg_web_name')]",
            "location": "westus2",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/dnszones",
            "apiVersion": "2023-07-01-preview",
            "name": "[parameters('dnszones_profp518325_example_name')]",
            "location": "global",
            "properties": {
                "zoneType": "Public"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-07-01",
            "name": "[parameters('networkSecurityGroups_nsg_web_name')]",
            "location": "westus2",
            "properties": {
                "securityRules": [
                    {
                        "name": "deny-test-any",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_nsg_web_name'), 'deny-test-any')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "description": "Temporary test to see rule orderingâ€”remove later.",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "allow-http",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_nsg_web_name'), 'allow-http')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "allow-https",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_nsg_web_name'), 'allow-https')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 210,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2024-06-01",
            "name": "[parameters('privateDnsZones_corp_profp518325_internal_name')]",
            "location": "global",
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2025-01-01",
            "name": "[parameters('storageAccounts_stprofp25lab2_name')]",
            "location": "westus2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "largeFileSharesState": "Enabled",
                "networkAcls": {
                    "resourceAccessRules": [],
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [
                        {
                            "value": "40.71.199.151",
                            "action": "Allow"
                        }
                    ],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Network/dnszones/A",
            "apiVersion": "2023-07-01-preview",
            "name": "[concat(parameters('dnszones_profp518325_example_name'), '/www')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/dnszones', parameters('dnszones_profp518325_example_name'))]"
            ],
            "properties": {
                "TTL": 1080000,
                "ARecords": [
                    {
                        "ipv4Address": "203.0.113.10"
                    }
                ],
                "targetResource": {},
                "trafficManagementProfile": {}
            }
        },
        {
            "type": "Microsoft.Network/dnszones/NS",
            "apiVersion": "2023-07-01-preview",
            "name": "[concat(parameters('dnszones_profp518325_example_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/dnszones', parameters('dnszones_profp518325_example_name'))]"
            ],
            "properties": {
                "TTL": 172800,
                "NSRecords": [
                    {
                        "nsdname": "ns1-08.azure-dns.com."
                    },
                    {
                        "nsdname": "ns2-08.azure-dns.net."
                    },
                    {
                        "nsdname": "ns3-08.azure-dns.org."
                    },
                    {
                        "nsdname": "ns4-08.azure-dns.info."
                    }
                ],
                "targetResource": {},
                "trafficManagementProfile": {}
            }
        },
        {
            "type": "Microsoft.Network/dnszones/SOA",
            "apiVersion": "2023-07-01-preview",
            "name": "[concat(parameters('dnszones_profp518325_example_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/dnszones', parameters('dnszones_profp518325_example_name'))]"
            ],
            "properties": {
                "TTL": 3600,
                "SOARecord": {
                    "email": "azuredns-hostmaster.microsoft.com",
                    "expireTime": 2419200,
                    "host": "ns1-08.azure-dns.com.",
                    "minimumTTL": 300,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                },
                "targetResource": {},
                "trafficManagementProfile": {}
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_nsg_web_name'), '/allow-http')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_web_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 200,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_nsg_web_name'), '/allow-https')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_web_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 210,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_nsg_web_name'), '/deny-test-any')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_web_name'))]"
            ],
            "properties": {
                "description": "Temporary test to see rule orderingâ€”remove later.",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 100,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_corp_profp518325_internal_name'), '/web1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_corp_profp518325_internal_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "10.20.10.10"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_corp_profp518325_internal_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_corp_profp518325_internal_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-07-01",
            "name": "[parameters('virtualNetworks_vnet_core_profp_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_web_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.20.0.0/16"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "privateEndpointVNetPolicies": "Disabled",
                "subnets": [
                    {
                        "name": "snet-data",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_core_profp_name'), 'snet-data')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.20.20.0/24"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "snet-web",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_core_profp_name'), 'snet-web')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.20.10.0/24"
                            ],
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_web_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('virtualNetworks_vnet_core_profp_name'), '/snet-data')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_core_profp_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.20.20.0/24"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_stprofp25lab2_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_stprofp25lab2_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                },
                "isVersioningEnabled": true
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_stprofp25lab2_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_stprofp25lab2_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_stprofp25lab2_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_stprofp25lab2_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_stprofp25lab2_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_stprofp25lab2_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_corp_profp518325_internal_name'), '/link-vnet-core-profp')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_corp_profp518325_internal_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_core_profp_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_core_profp_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('virtualNetworks_vnet_core_profp_name'), '/snet-web')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_core_profp_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_web_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.20.10.0/24"
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_web_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_stprofp25lab2_name'), '/default/docs')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_stprofp25lab2_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_stprofp25lab2_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": true
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        }
    ]
}